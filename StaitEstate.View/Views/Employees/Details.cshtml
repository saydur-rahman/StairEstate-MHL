@model StairEstate.Entity.hr_employee

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_InnerLayout.cshtml";
}


<div class="parentDiv panel mainbody panel-body">
    <div class="head form-inline panel-heading" style="color: black">
        <h4>Detals Sales Person</h4>
    </div>


    @using (Html.BeginForm("Edit", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()



    <div class="form-horizontal">
        <br />
        <br />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.emp_id)
        @Html.HiddenFor(model => model.emp_image)


        <div class="form-group">
            <label class="control-label col-md-2"></label>
            <div class="col-md-4">
                <img id="imgpreview" height="200" width="200" src="@Url.Content(Model.emp_image)" style="border-width: 1px; visibility: visible;" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Emp Code</label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.emp_code, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                @Html.ValidationMessageFor(model => model.emp_code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Full Name</label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.emp_name, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                @Html.ValidationMessageFor(model => model.emp_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Mobile No.</label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.emp_phone, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                @Html.ValidationMessageFor(model => model.emp_phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Father or Husband's Name</label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.emp_father_or_husband_name, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                @Html.ValidationMessageFor(model => model.emp_father_or_husband_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Mother's Name</label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.emp_mother_name, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                @Html.ValidationMessageFor(model => model.emp_mother_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Permanent Address</label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.emp_permanent_address, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                @Html.ValidationMessageFor(model => model.emp_permanent_address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Present Address</label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.emp_present_address, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                @Html.ValidationMessageFor(model => model.emp_present_address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Date of Birth</label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.emp_dob, new { htmlAttributes = new { @class = "form-control date", @readonly = "" } })
                @Html.ValidationMessageFor(model => model.emp_dob, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Birth Place</label>
            <div class="col-md-4">
                @Html.EditorFor(model => model.emp_birth_place, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                @Html.ValidationMessageFor(model => model.emp_birth_place, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Employee Type</label>
            <div class="col-md-4">
                @Html.DropDownList("emp_type_id", null, htmlAttributes: new { @class = "form-control", @disabled = "" })
                @Html.ValidationMessageFor(model => model.emp_type_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Branch</label>
            <div class="col-md-4">
                @Html.DropDownList("emp_branch_id", null, htmlAttributes: new { @class = "form-control", @disabled = "" })
                @Html.ValidationMessageFor(model => model.emp_branch_id, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Edit", "Edit", "Employees", null, new { @class = "btn btn-sm btn-small btn-Primary return" })
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index", "Employees", new { id = Model.emp_id }, new { @class = "btn btn-sm btn-small btn-default return" })
    </div>
</div>



<script>

</script>